python module wind
  interface
    subroutine rep(iopt,ider,mx,x,my,y,z,z0,z1,s,nxest,nyest, &
        nx,tx,ny,ty,c,fp,wrk,lwrk,iwrk,kwrk,ier)
       !  nx,tx,ny,ty,c,fp,ier = rep(x,y,z,[z0,z1,s])

       fortranname spgrid
       threadsafe

       integer dimension(3) :: iopt
       integer dimension(4) :: ider
       integer intent(hide) :: mx=len(x)
       real*8 dimension(mx) :: x
       integer intent(hide) :: my=len(y)
       real*8 dimension(my) :: y
       real*8 dimension(mx*my),depend(mx,my),check(len(z)==mx*my) :: z
       real*8 optional :: z0
       real*8 optional :: z1
       real*8 optional,check(0.0<=s) :: s = 0.0
       integer intent(hide),depend(mx),check(nxest>=8) &
            :: nxest = mx+6
       integer intent(hide),depend(my),check(nyest>=8) &
            :: nyest = my+7
       integer intent(out) :: nx
       real*8 dimension(nxest),intent(out),depend(nxest) :: tx
       integer intent(out) :: ny
       real*8 dimension(nyest),intent(out),depend(nyest) :: ty
       real*8 dimension((nxest-4)*(nyest-4)), &
            depend(nxest,nyest),intent(out) :: c
       real*8 intent(out) :: fp
       real*8 dimension(lwrk),intent(cache,hide),depend(lwrk) :: wrk
       integer intent(hide),depend(mx,my,nxest,nyest) &
            :: lwrk=12+nxest*(my+nyest+3)+nyest*24+4*mx+8*my+max(my+nyest,nxest)
       integer dimension(kwrk),intent(cache,hide),depend(kwrk) :: iwrk
       integer intent(hide),depend(mx,my,nxest,nyest) &
            :: kwrk=5+mx+my+nxest+nyest
       integer intent(out) :: ier
     end subroutine rep
  end interface
end python module wind
